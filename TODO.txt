// Project: SauronEye

// Keyboard Control: Will block Numpad Enter key events and use it to trigger
// a capture event. This is a simple example of how to block a key event in X11.

#include <X11/Xlib.h>
#include <X11/keysym.h>
#include <iostream>

int main() {
    Display* display = XOpenDisplay(nullptr);
    if (!display) {
        std::cerr << "Failed to open X display\n";
        return 1;
    }

    Window root = DefaultRootWindow(display);
    int keycode = XKeysymToKeycode(display, XK_KP_Enter);

    // Grab Numpad Enter with any modifier (e.g., NumLock, Shift)
    for (int mod = 0; mod < (1 << 3); ++mod) {
        XGrabKey(display, keycode, mod, root, True, GrabModeAsync, GrabModeAsync);
    }

    XSelectInput(display, root, KeyPressMask);

    std::cout << "Listening for Numpad Enter. Press Ctrl+C to exit.\n";

    XEvent ev;
    while (true) {
        XNextEvent(display, &ev);

        if (ev.type == KeyPress && ev.xkey.keycode == keycode) {
            std::cout << "Blocked Numpad Enter\n";
            // Don't re-emit the event â†’ effectively blocks it
        }
    }

    XCloseDisplay(display);
    return 0;
}




